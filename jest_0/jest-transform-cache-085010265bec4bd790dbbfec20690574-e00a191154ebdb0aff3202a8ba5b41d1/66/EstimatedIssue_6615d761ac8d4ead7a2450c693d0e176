0f54fa651b9c28db34a8c0cfb7bd1f87
'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/buddy/unknown-stag/src/components/EstimatedIssue/EstimatedIssue.js';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _fire = require('../../fire');var _fire2 = _interopRequireDefault(_fire);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class EstimatedIssue extends _react.Component {
    constructor(props) {
        super(props);
        this.state = {
            estimates: {} };

        this.updateIssue = this.updateIssue.bind(this);
        this.removeIssue = this.removeIssue.bind(this);
    }
    componentWillMount() {
        let refEstimates = _fire2.default.database().ref('estimates/' + this.props.id);
        refEstimates.on('child_added', snapshot => {
            let estimate = {
                points: snapshot.val().points,
                id: snapshot.key,
                photo: snapshot.val().creator_photoURL,
                name: snapshot.val().creator_displayName };

            let estimates = this.state.estimates;
            estimates[snapshot.key] = estimate;
            this.setState({ estimates });
        });
    }
    updateIssue(e) {
        _fire2.default.database().ref('issues').child(this.props.id).update({
            estimated: !this.props.estimated }).
        then(() => {
        }, error => {
            console.log(error);
        });
    }
    removeIssue(e) {
        let ref = _fire2.default.database().ref('issues');
        let rmIssue = window.confirm("You are about to delete this issue!");
        if (rmIssue) {
            ref.child(this.props.id).remove().then(() => {
            }, error => {
                console.log(error);
            });
        }
    }
    render() {
        return (
            _react2.default.createElement('li', { className: 'collection-item', __source: { fileName: _jsxFileName, lineNumber: 47 }, __self: this },
                _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 48 }, __self: this }, this.props.title,
                    _react2.default.createElement('a', { href: '', onClick: e => this.updateIssue(e), title: 'toggle done', className: 'secondary-content', __source: { fileName: _jsxFileName, lineNumber: 49 }, __self: this }, _react2.default.createElement('i', { className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 49 }, __self: this }, 'compare_arrows')),
                    _react2.default.createElement('a', { href: '', onClick: e => this.removeIssue(e), hidden: !this.props.owner, title: 'delete issue', className: 'secondary-content', __source: { fileName: _jsxFileName, lineNumber: 50 }, __self: this }, _react2.default.createElement('i', { className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 50 }, __self: this }, 'delete_forever')),
                    _react2.default.createElement('br', { __source: { fileName: _jsxFileName, lineNumber: 51 }, __self: this }),
                    Object.values(this.state.estimates).map(estimate =>
                    _react2.default.createElement('div', { className: 'chip', key: estimate.id, title: estimate.name, __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: this },
                        _react2.default.createElement('img', { src: estimate.photo, alt: 'img', __source: { fileName: _jsxFileName, lineNumber: 54 }, __self: this }),
                        estimate.points)),


                    _react2.default.createElement('div', { className: 'chip', __source: { fileName: _jsxFileName, lineNumber: 58 }, __self: this },
                        _react2.default.createElement('strong', { __source: { fileName: _jsxFileName, lineNumber: 59 }, __self: this }, 'Average:\xA0'), this.props.avg))));




    }}exports.default =

EstimatedIssue;