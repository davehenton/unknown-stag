32379e83f55918c7672179961c115d3d
'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/buddy/unknown-stag/src/pages/Session.js';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _fire = require('../fire');var _fire2 = _interopRequireDefault(_fire);
var _UnestimatedIssue = require('../components/UnestimatedIssue/UnestimatedIssue');var _UnestimatedIssue2 = _interopRequireDefault(_UnestimatedIssue);
var _EstimatedIssue = require('../components/EstimatedIssue/EstimatedIssue');var _EstimatedIssue2 = _interopRequireDefault(_EstimatedIssue);
require('./Pages.css');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class SessionPage extends _react.Component {
    constructor(props) {
        super(props);
        this.state = {
            unestimated: {},
            estimated: {},
            sessionTitle: 'Session',
            owner: false };

        this.getQueryStringParameter = this.getQueryStringParameter.bind(this);
    }
    componentWillMount() {
        let sessionUid = this.getQueryStringParameter("uid");
        let refUnestimated = _fire2.default.database().ref('issues').orderByChild("session_uid").equalTo(sessionUid);
        refUnestimated.on('child_added', snapshot => {
            let issue = {
                title: snapshot.val().title,
                id: snapshot.key,
                estimated: snapshot.val().estimated,
                average: snapshot.val().average || 0 };

            if (issue.estimated === false) {
                this.setState(prevState => {
                    let unEst = prevState.unestimated;
                    unEst[snapshot.key] = issue;
                    return {
                        unestimated: unEst };

                });
                return;
            }
            let estimated = this.state.estimated;
            estimated[snapshot.key] = issue;
            this.setState({ estimated });
        });
        _fire2.default.auth().onAuthStateChanged(user => {
            if (user) {
                return _fire2.default.database().ref('sessions').child(sessionUid).once('value').then(snapshot => {
                    this.setState({ sessionTitle: snapshot.val().title });
                    if (snapshot.val().creator_uid === _fire2.default.auth().currentUser.uid) {
                        this.setState({ owner: true });
                    }
                }, error => {
                    console.log(error);
                });
            }
        });
    }
    getQueryStringParameter(paramToRetrieve) {
        var params = document.URL.split("?")[1].split("&");
        for (var ii in params) {
            var singleParam = params[ii].split("=");
            if (singleParam[0] === paramToRetrieve)
            return singleParam[1];
        }
    }
    addIssue(e) {
        e.preventDefault();
        let sessionUid = this.getQueryStringParameter("uid");
        let newIssues = _fire2.default.database().ref('issues').push();
        return newIssues.set({
            uid: newIssues.key,
            title: this.inputE2.value,
            creator_photoURL: _fire2.default.auth().currentUser.photoURL,
            creator_displayName: _fire2.default.auth().currentUser.displayName,
            creator_uid: _fire2.default.auth().currentUser.uid,
            estimated: false,
            session_uid: sessionUid }).
        then(() => {
            this.inputE2.value = '';
        }, error => {
            console.log(error);
        });
    }
    render() {
        return (
            _react2.default.createElement('div', { className: 'page', __source: { fileName: _jsxFileName, lineNumber: 83 }, __self: this },
                _react2.default.createElement('div', { className: 'row', __source: { fileName: _jsxFileName, lineNumber: 84 }, __self: this },
                    _react2.default.createElement('div', { className: 'col l12 s12', __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this },
                        _react2.default.createElement('h3', { __source: { fileName: _jsxFileName, lineNumber: 86 }, __self: this }, this.state.sessionTitle))),


                _react2.default.createElement('div', { className: 'row', __source: { fileName: _jsxFileName, lineNumber: 89 }, __self: this },
                    _react2.default.createElement('form', { className: 'col l12 s12', onSubmit: this.addIssue.bind(this), __source: { fileName: _jsxFileName, lineNumber: 90 }, __self: this },
                        _react2.default.createElement('input', { placeholder: 'Create a new issue in this session...', id: 'new_issue', type: 'text', className: 'validate', ref: e2 => this.inputE2 = e2, __source: { fileName: _jsxFileName, lineNumber: 91 }, __self: this }),
                        _react2.default.createElement('input', { className: 'btn waves-effect waves-light', type: 'submit', value: 'Go', __source: { fileName: _jsxFileName, lineNumber: 92 }, __self: this }))),


                _react2.default.createElement('div', { className: 'row', __source: { fileName: _jsxFileName, lineNumber: 95 }, __self: this },
                    _react2.default.createElement('div', { className: 'input-field col l6 s12', __source: { fileName: _jsxFileName, lineNumber: 96 }, __self: this },
                        _react2.default.createElement('ul', { className: 'collection with-header', __source: { fileName: _jsxFileName, lineNumber: 97 }, __self: this },
                            _react2.default.createElement('li', { className: 'collection-header', __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: this }, _react2.default.createElement('h4', { __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: this }, 'Unestimated Issues')),

                            Object.values(this.state.unestimated).map(issue =>
                            _react2.default.createElement(_UnestimatedIssue2.default, { owner: this.state.owner, id: issue.id, title: issue.title, estimated: issue.estimated, __source: { fileName: _jsxFileName, lineNumber: 101 }, __self: this })))),




                    _react2.default.createElement('div', { className: 'input-field col l6 s12', __source: { fileName: _jsxFileName, lineNumber: 106 }, __self: this },
                        _react2.default.createElement('ul', { className: 'collection with-header', __source: { fileName: _jsxFileName, lineNumber: 107 }, __self: this },
                            _react2.default.createElement('li', { className: 'collection-header', __source: { fileName: _jsxFileName, lineNumber: 108 }, __self: this }, _react2.default.createElement('h4', { __source: { fileName: _jsxFileName, lineNumber: 108 }, __self: this }, 'Estimated Issues')),

                            Object.values(this.state.estimated).map(issue =>
                            _react2.default.createElement(_EstimatedIssue2.default, { owner: this.state.owner, avg: issue.average, id: issue.id, title: issue.title, estimated: issue.estimated, __source: { fileName: _jsxFileName, lineNumber: 111 }, __self: this })))))));







    }}exports.default =


SessionPage;