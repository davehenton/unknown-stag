f92c6609657bd20cfceae487ed78067a
'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/buddy/unknown-stag/src/pages/Sessions.js';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _fire = require('../fire');var _fire2 = _interopRequireDefault(_fire);
require('./Pages.css');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class SessionsPage extends _react.Component {
    constructor(props) {
        super(props);
        this.state = {
            sessions: {} };

        this.removeSession = this.removeSession.bind(this);
        this.closeSession = this.closeSession.bind(this);
        this.openSession = this.openSession.bind(this);
    }
    componentWillMount() {
        _fire2.default.auth().onAuthStateChanged(user => {
            if (!user) {
                return;
            }
            let userId = _fire2.default.auth().currentUser.uid;
            let refSessions = _fire2.default.database().ref('sessions').orderByChild("creator_uid").equalTo(userId);
            refSessions.on('child_added', snapshot => {
                let session = {
                    title: snapshot.val().title,
                    id: snapshot.key,
                    closed: snapshot.val().closed,
                    url: "/session?uid=" + snapshot.key };

                let sessions = this.state.sessions;
                sessions[snapshot.key] = session;
                this.setState({ sessions });
            });
            refSessions.on('child_removed', snapshot => {
                let sessions = this.state.sessions;
                delete sessions[snapshot.key];
                this.setState({ sessions });
            });
        });
    }
    addSession(e) {
        e.preventDefault();
        let newSession = _fire2.default.database().ref('sessions').push();
        return newSession.set({
            uid: newSession.key,
            title: this.inputE1.value,
            creator_photoURL: _fire2.default.auth().currentUser.photoURL,
            creator_displayName: _fire2.default.auth().currentUser.displayName,
            creator_uid: _fire2.default.auth().currentUser.uid }).
        then(() => {
            this.inputE1.value = '';
        }, error => {
            console.log(error);
        });
    }
    removeSession(e, id) {
        let ref = _fire2.default.database().ref('sessions');
        let rmIssue = window.confirm("You are about to delete this session!");
        if (rmIssue) {
            ref.child(id).remove().then(() => {
            }, error => {
                console.log(error);
            });
        }
    }
    closeSession(e, id) {
        _fire2.default.database().ref('sessions').child(id).update({
            closed: true }).
        then(() => {
        }, error => {
            console.log(error);
        });
    }
    openSession(e, id) {
        _fire2.default.database().ref('sessions').child(id).update({
            closed: false }).
        then(() => {
        }, error => {
            console.log(error);
        });
    }
    render() {
        return (
            _react2.default.createElement('div', { className: 'page', __source: { fileName: _jsxFileName, lineNumber: 83 }, __self: this },
                _react2.default.createElement('div', { className: 'row', __source: { fileName: _jsxFileName, lineNumber: 84 }, __self: this },
                    _react2.default.createElement('form', { className: 'col s12', onSubmit: this.addSession.bind(this), __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this },
                        _react2.default.createElement('div', { className: 'row', __source: { fileName: _jsxFileName, lineNumber: 86 }, __self: this },
                            _react2.default.createElement('div', { className: 'input-field col l6 s12', __source: { fileName: _jsxFileName, lineNumber: 87 }, __self: this },
                                _react2.default.createElement('input', { placeholder: 'Create a new session to get started...', id: 'new_session', type: 'text', className: 'validate', ref: e1 => this.inputE1 = e1, __source: { fileName: _jsxFileName, lineNumber: 88 }, __self: this }),
                                _react2.default.createElement('input', { className: 'btn waves-effect waves-light', type: 'submit', value: 'Go', __source: { fileName: _jsxFileName, lineNumber: 89 }, __self: this })),

                            _react2.default.createElement('div', { className: 'input-field col l6 s12', __source: { fileName: _jsxFileName, lineNumber: 91 }, __self: this },
                                _react2.default.createElement('ul', { className: 'collection with-header', __source: { fileName: _jsxFileName, lineNumber: 92 }, __self: this },
                                    _react2.default.createElement('li', { className: 'collection-header', __source: { fileName: _jsxFileName, lineNumber: 93 }, __self: this }, _react2.default.createElement('h4', { __source: { fileName: _jsxFileName, lineNumber: 93 }, __self: this }, 'Recent Sessions')),

                                    Object.values(this.state.sessions).map(session =>
                                    _react2.default.createElement('li', { className: 'collection-item', key: session.id, __source: { fileName: _jsxFileName, lineNumber: 96 }, __self: this },
                                        _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 97 }, __self: this }, session.title,
                                            _react2.default.createElement('a', { href: session.url, title: 'go to session', className: 'secondary-content', __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: this }, _react2.default.createElement('i', { className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: this }, 'arrow_forward')),
                                            _react2.default.createElement('a', { hidden: session.closed, href: '', onClick: e => this.closeSession(e, session.id), title: 'close session', id: session.id, className: 'secondary-content', __source: { fileName: _jsxFileName, lineNumber: 99 }, __self: this }, _react2.default.createElement('i', { className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 99 }, __self: this }, 'done_all')),
                                            _react2.default.createElement('a', { hidden: !session.closed, href: '', onClick: e => this.openSession(e, session.id), title: 're-open session', id: session.id, className: 'secondary-content', __source: { fileName: _jsxFileName, lineNumber: 100 }, __self: this }, _react2.default.createElement('i', { className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 100 }, __self: this }, 'cached')),
                                            _react2.default.createElement('a', { href: '', onClick: e => this.removeSession(e, session.id), title: 'delete session', id: session.id, className: 'secondary-content', __source: { fileName: _jsxFileName, lineNumber: 101 }, __self: this }, _react2.default.createElement('i', { className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 101 }, __self: this }, 'delete_forever'))))))))))));











    }}exports.default =



SessionsPage;